#!/bin/bash
#
#  * Written by Gil Tene of Azul Systems, and released to the public domain,
#  * as explained at http://creativecommons.org/publicdomain/zero/1.0/
#
# This script uses gnuplot to plot the percentile distribution in the
# input files provided. run with "-h" option for an expected usage description.
#
# The script assumes the input files contain ".hgrm" formatted output such
# as the one provided by HdrHistogram. The 4th column in the input files is
# expected to be the value of 1/(1-percentile) (for a given percentile),
# and the 1st column in the input files is expected to be the value at the
# given percentile.
#

reading_SLA_NAME=0
reading_OUTPUT_NAME=0
helpFlagFound=0
SLA_NAME=
declare -a FILES
declare -i idx=0
OUTPUT_FILENAME=
reading_maxvalue=0
maxvalue=
reading_title=0
title=

for var in "$@"; do
	if [[ $reading_SLA_NAME -eq 1 ]] ; then
		SLA_NAME="$var"
		reading_SLA_NAME=0
	elif [[ $reading_OUTPUT_NAME -eq 1 ]] ; then
		OUTPUT_FILENAME="$var"
		reading_OUTPUT_NAME=0
	elif [[ $reading_maxvalue -eq 1 ]] ; then
		maxvalue="set yrange [0:$var]"
		reading_maxvalue=0
	elif [[ $reading_title -eq 1 ]] ; then
		title="$var"
		reading_title=0
	elif [[ "$var" = "-h" ]] ; then
		helpFlagFound=1
	elif [[ "$var" = "-o" ]] ; then
		reading_OUTPUT_NAME=1
	elif [[ "$var" = "-s" ]] ; then
		reading_SLA_NAME=1
	elif [[ "$var" = "-m" ]] ; then
		reading_maxvalue=1
	elif [[ "$var" = "-t" ]] ; then
		reading_title=1
	else
		FILES[$i]="$var"
		let i++
	fi
done

message()
{
    echo "$@" >&2
}

if [ $helpFlagFound -eq 1 ]; then
	message "Usage: $0 [-o output_file] [-m maxvalue] [-t title] [-s sla_file] wrk2_file ..."
	exit 255
fi

if [ $SLA_NAME ]; then
	message "Plotting: " ${FILES[*]} " + SLA $SLA_NAME"
else
	message "Plotting: " ${FILES[*]}
fi

(
    echo "#plot commands"
    echo "set terminal png size 1280,720"
    if [[ -n "$OUTPUT_FILENAME" ]]; then
        echo "set output '$OUTPUT_FILENAME'"
    fi
    echo "set xlabel 'Percentile'"
    echo "show xlabel"
    echo "set ylabel 'Latency in milliseconds'"
	echo "show ylabel"
    echo "set logscale x"
    echo "unset xtics"
    echo "$maxvalue"
    if [[ -n "$title" ]]; then
        echo "set title '$title'"
    	echo "show title"
    fi
    echo "set key top left"
    echo "set style line 1 lt 1 lw 3 pt 3 linecolor rgb \"red\""

    echo "\$Xlabels << EOD0"
    echo "1.0	0.0	0%"
    echo "1.0	0.0	0%"
    echo "10.0	0.0	90%"
    echo "100.0	0.0	99%"
    echo "1000.0	0.0	99.9%"
    echo "10000.0	0.0	99.99%"
    echo "100000.0	0.0	99.999%"
    echo "1000000.0	0.0	99.9999%"
    echo "10000000.0	0.0	99.99999%"
    echo "EOD0"

    IndividualFilePlotCommands="\$Xlabels notitle '' with labels center offset 0, 1.0 point"
    i=1
    for file in "${FILES[@]}"; do
        echo "\$File$i << EOD$i"
        found=0
        while read line; do
            if (( found )) ; then
				lin=${line/---------/}
				if [[ "$lin" != "$line" ]] ; then
					break
				else
					lin=${line//inf/9999999.99}
					echo "$lin"
				fi
            else
				lin=${line/Detailed Percentile spectrum:/}
				if [[ "$lin" != "$line" ]] ; then
				    found=1
				fi
            fi
        done < "$file"
        echo "EOD$i"
		titl=${file#test*-}
		titl=${titl%.*}
        IndividualFilePlotCommands="$IndividualFilePlotCommands, \$File$i using 4:1 title '$titl' with lines"
        let i++
    done

    if [ $SLA_NAME ]; then
	    IndividualFilePlotCommands="$IndividualFilePlotCommands, '$SLA_NAME' with lines ls 1"
    fi

    echo "plot $IndividualFilePlotCommands"
) | gnuplot

